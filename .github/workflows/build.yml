name: build

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  
jobs:

  check_build_trigger:

    name: Check build trigger
    runs-on: ubuntu-latest
    # if: github.repository == 'cygorithms/cygorithms'
    outputs:
      build: ${{ steps.check_build_trigger.outputs.build }}

    steps:
      - name: Checkout cygorithms
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - id: check_build_trigger
        name: Check build trigger
        run: bash build_tools/check_build_trigger.sh
      
  build-ubuntu:

    name: build and test for cp${{ matrix.python-version }}-ubuntu
    runs-on: ubuntu-latest
    needs: check_build_trigger
    if: needs.check_build_trigger.outputs.build

    strategy:
      max-parallel: 5
      matrix:
        python-version: [ "3.9", "3.10" ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Build cmake-extensions
      run: bash build_tools/build_cmake_ubuntu.sh
    - name: Install packages
      run: bash build_tools/build_source_ubuntu.sh
    - name: Lint with flake8
      run: |
        python -m pip install flake8
        flake8 . --count --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    - name: Run tests
      run: bash build_tools/build_tests_ubuntu.sh

  build-windows:

    name: build and test for cp${{ matrix.python-version }}-windows
    runs-on: windows-latest
    needs: check_build_trigger
    if: needs.check_build_trigger.outputs.build

    strategy:
      max-parallel: 5
      matrix:
        python-version: [ "3.9", "3.10" ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge
    - run: conda --version
    - run: which python
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Build cmake-extensions
      run: bash build_tools/build_cmake_windows.sh
    - name: Install packages
      run: bash build_tools/build_source_windows.sh
    - name: Lint with flake8
      run: |
        python -m pip install flake8
        flake8 . --count --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    - name: Run tests
      run: bash build_tools/build_tests_windows.sh